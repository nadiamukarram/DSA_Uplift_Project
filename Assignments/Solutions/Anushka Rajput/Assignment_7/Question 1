/*  Given an i/p array where every element occurs three times, except one element 
which occurs only once. Find that element.
I/P:
4 3 5 5 4 4 5
O/P:
3       */

#include <bits/stdc++.h>
using namespace std;

int getSingle(int arr[], int n)
{
	int ones = 0, twos = 0;

	int common_bit_mask;
	for (int i = 0; i < n; i++) 
    {
		twos = twos | (ones & arr[i]);
		ones = ones ^ arr[i];
		common_bit_mask = ~(ones & twos);
		ones &= common_bit_mask;
		twos &= common_bit_mask;
	}

	return ones;
}

// Driver code
int main()
{
	int arr[] = { 4, 3, 5, 5, 4, 4, 5 };
	int n = sizeof(arr) / sizeof(arr[0]);
	cout << "The element with single occurrence is "<< getSingle(arr, n);
	return 0;
}
