#printing maximum sum of the subarray in the array
import sys
my_list=[]
n=int(input('Enter the elements'))

for i in range(n):
    my_list.append(int(input(f'enter the element {i}--:')))
print(my_list)
# kadane's algorithm start
# this algorithm allows us to find the largest sum of subarray in the array
# THERE  are 2 methods to find the same 
#1. brute force method { time complexity = o(n^2)}
#2. kadane's algorithm { time complexity = o(n)}
overall_sum=-sys.maxsize-1
current_sum=0
for i in range(n):
    current_sum=current_sum+my_list[i]
    if overall_sum<current_sum:
        overall_sum=current_sum
    if current_sum<0:
        current_sum=0
print(overall_sum)            


    
    






'''#include<bits/stdc++.h>
using namespace std;
int main()
{
int arr[6]={-2,-3,-4,-1,-2,-6};
int current_sum=0,overall_sum=INT_MIN;
for(int i=0;i<6;i++)
{
current_sum=current_sum+arr[i];
if(overall_sum<current_sum)
overall_sum=current_sum;
if(current_sum<0)
current_sum=0;


}
cout<<overall_sum;
return 0;
}
'''
#output
'''
utkarsh@pop-os:~/Documents/utkarsh stuff/vs python/pyhton folder/classwork/classwork1/homework 1/homework2$ /usr/bin/python3.9 "/home/utkarsh/Documents/utkarsh stuff/vs python/pyhton folder/classwork/classwork1/homework 1/homework2/4th(kadane's algo).py"
Enter the elements8
enter the element 0--:-2
enter the element 1--:-3
enter the element 2--:4
enter the element 3--:-1
enter the element 4--:-2
enter the element 5--:1
enter the element 6--:5
enter the element 7--:-3
[-2, -3, 4, -1, -2, 1, 5, -3]
7
'''
