/******************************************************************************

Question 2: Given a sorted array of positive integers (elements may be repeated) and a number x. The task is to find the leftmost index of x in the given array.
Example 1:
Input:
N = 10
arr[] = {1,1,2,2,3,4,5,5,6,7}
x = 1
Output: 0 


Iterative Binary search
Time:O(logn)

*******************************************************************************/
#include <iostream>
using namespace std;

int
firstIndex (int arr[], int n, int key)
{
  int mid, low = -1, high = n - 1, idx = -1;
  while (low <= high)
    {
      mid = (low + high) / 2;
      if (arr[mid] == key)
	{
	  idx = mid;
	  high = mid - 1;
	}
      else if (arr[mid] < key)
	low = mid + 1;
      else
	high = mid - 1;
    }
  return idx;
}

int
main ()
{
  int n;
  cout << "Enter size of array : ";
  cin >> n;
  int key, array[n], i;
  cout << "Enter array elements: ";
  for (i = 0; i < n; i++)
    cin >> array[i];
  cout << "Enter key element  to search in array : ";
  cin >> key;
  int idx = firstIndex (array, n, key);
  if (idx == -1)
    cout << "Element not found.";
  else
    cout << "Element's least index in the array is " << idx;
  return 0;
}
